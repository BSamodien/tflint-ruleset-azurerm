// This file generated by `tools/apispec-rule-gen/main.go`. DO NOT EDIT

package apispec

import (
	"fmt"

	hcl "github.com/hashicorp/hcl/v2"
	"github.com/terraform-linters/tflint-plugin-sdk/tflint"
)

// AzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule checks the pattern is valid
type AzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule struct {
	resourceType  string
	attributeName string
	enum          []string
}

// NewAzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule returns new rule with default attributes
func NewAzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule() *AzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule {
	return &AzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule{
		resourceType:  "azurerm_sql_database",
		attributeName: "requested_service_objective_name",
		enum: []string{
			"System",
			"System0",
			"System1",
			"System2",
			"System3",
			"System4",
			"System2L",
			"System3L",
			"System4L",
			"Free",
			"Basic",
			"S0",
			"S1",
			"S2",
			"S3",
			"S4",
			"S6",
			"S7",
			"S9",
			"S12",
			"P1",
			"P2",
			"P3",
			"P4",
			"P6",
			"P11",
			"P15",
			"PRS1",
			"PRS2",
			"PRS4",
			"PRS6",
			"DW100",
			"DW200",
			"DW300",
			"DW400",
			"DW500",
			"DW600",
			"DW1000",
			"DW1200",
			"DW1000c",
			"DW1500",
			"DW1500c",
			"DW2000",
			"DW2000c",
			"DW3000",
			"DW2500c",
			"DW3000c",
			"DW6000",
			"DW5000c",
			"DW6000c",
			"DW7500c",
			"DW10000c",
			"DW15000c",
			"DW30000c",
			"DS100",
			"DS200",
			"DS300",
			"DS400",
			"DS500",
			"DS600",
			"DS1000",
			"DS1200",
			"DS1500",
			"DS2000",
			"ElasticPool",
		},
	}
}

// Name returns the rule name
func (r *AzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule) Name() string {
	return "azurerm_sql_database_invalid_requested_service_objective_name"
}

// Enabled returns whether the rule is enabled by default
func (r *AzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule) Enabled() bool {
	return true
}

// Severity returns the rule severity
func (r *AzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule) Severity() string {
	return tflint.ERROR
}

// Link returns the rule reference link
func (r *AzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule) Link() string {
	return ""
}

// Check checks the pattern is valid
func (r *AzurermSQLDatabaseInvalidRequestedServiceObjectiveNameRule) Check(runner tflint.Runner) error {
	return runner.WalkResourceAttributes(r.resourceType, r.attributeName, func(attribute *hcl.Attribute) error {
		var val string
		err := runner.EvaluateExpr(attribute.Expr, &val)

		return runner.EnsureNoError(err, func() error {
			found := false
			for _, item := range r.enum {
				if item == val {
					found = true
				}
			}
			if !found {
				runner.EmitIssue(
					r,
					fmt.Sprintf(`"%s" is an invalid value as requested_service_objective_name`, truncateLongMessage(val)),
					attribute.Expr.Range(),
					tflint.Metadata{Expr: attribute.Expr},
				)
			}
			return nil
		})
	})
}
